name: Build All Packages
on:
  workflow_dispatch:

# Cancel active CI runs for a PR before starting another run
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

env:
  FORCE_COLOR: "1"

jobs:
  test:
    name: Test builds
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        package: ['yarl', 'cryptography', 'contourpy', 'libjpeg', 'xz', 'bcrypt', 'pillow', 'lru-dict', 'typed-ast', 'libpng', 'aiohttp', 'brotli', 'kiwisolver', 'oldest-supported-numpy', 'numpy', 'pandas', 'matplotlib', 'argon2-cffi', 'bitarray']
        python-version: [ "3.9", "3.10", "3.11", "3.12", "3.13-dev" ]
        runs-on: ["macos-13", "macos-latest"]

    steps:
    - name: Checkout
      uses: actions/checkout@v4.2.0
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5.2.0
      with:
        python-version: ${{ matrix.python-version }}

    - name: Setup Build Env
      run: |
        source ./setup-iOS.sh $(cut -d- -f1 <<< ${{ matrix.python-version }})
        forge iOS libffi
        forge iOS cffi
        forge iOS bzip2
        forge iOS openssl
        forge iOS ninja

    - name: Extra Setup Build Env
      if: contains(fromJSON('["matplotlib", "pillow", "pandas"]'), matrix.package)
      run: |
        source ./setup-iOS.sh $(cut -d- -f1 <<< ${{ matrix.python-version }})
        forge iOS libjpeg
        forge iOS libpng
        forge iOS freetype
        forge iOS numpy
        forge iOS oldest-supported-numpy

    - name: Build ${{ matrix.package }}
      run: |
        source ./setup-iOS.sh $(cut -d- -f1 <<< ${{ matrix.python-version }})
        forge iOS ${{ matrix.package }}
