Common subdirectories: Pillow-9.4.0-orig/Tests and Pillow-9.4.0/Tests
Common subdirectories: Pillow-9.4.0-orig/depends and Pillow-9.4.0/depends
Common subdirectories: Pillow-9.4.0-orig/docs and Pillow-9.4.0/docs
diff -u Pillow-9.4.0-orig/setup.py Pillow-9.4.0/setup.py
--- Pillow-9.4.0-orig/setup.py	2023-01-02 08:17:32
+++ Pillow-9.4.0/setup.py	2023-09-21 10:16:17
@@ -408,10 +408,19 @@
                 self.extensions.remove(extension)
                 break

-    def get_macos_sdk_path(self):
+    def get_apple_sdk_path(self):
         try:
+            sdk = {
+                ("ios", False): ["--sdk", "iphoneos"],
+                ("ios", True): ["--sdk", "iphonesimulator"],
+                ("tvos", False): ["--sdk", "appletvos"],
+                ("tvos", True): ["--sdk", "appletvsimulator"],
+                ("watchos", False): ["--sdk", "watchos"],
+                ("watchos", True): ["--sdk", "watchsimulator"],
+                ("darwin", False): [],
+            }[sys.platform, getattr(sys.implementation, "_multiarch", "").endswith("simulator")]
             sdk_path = (
-                subprocess.check_output(["xcrun", "--show-sdk-path"])
+                subprocess.check_output(["xcrun", "--show-sdk-path"] + sdk)
                 .strip()
                 .decode("latin1")
             )
@@ -556,10 +564,15 @@
                 _add_directory(library_dirs, "/usr/X11/lib")
                 _add_directory(include_dirs, "/usr/X11/include")

-            sdk_path = self.get_macos_sdk_path()
+            sdk_path = self.get_apple_sdk_path()
             if sdk_path:
                 _add_directory(library_dirs, os.path.join(sdk_path, "usr", "lib"))
                 _add_directory(include_dirs, os.path.join(sdk_path, "usr", "include"))
+        elif sys.platform in {"ios", "tvos", "watchos"}:
+            sdk_path = self.get_apple_sdk_path()
+            if sdk_path:
+                _add_directory(library_dirs, os.path.join(sdk_path, "usr", "lib"))
+                _add_directory(include_dirs, os.path.join(sdk_path, "usr", "include"))
         elif (
             sys.platform.startswith("linux")
             or sys.platform.startswith("gnu")
